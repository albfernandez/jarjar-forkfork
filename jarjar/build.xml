<?xml version='1.0' encoding='UTF-8'?>
<project name="Jar Jar Links" default="jar">
    <property file="${user.home}/build.properties" />
    <property file="build.properties" />

    <property name="javadoc.access" value="public"/>

    <property name="compile.source" value="1.3"/>
    <property name="compile.target" value="1.2"/>
    <property name="compile.bootclasspath" value=""/>
    <property name="compile.extdirs" value=""/>

    <property name="compile.debug" value="true"/>
    <property name="compile.deprecation" value="false"/>
    <property name="compile.optimize" value="false"/>

    <property name="version" value="0.9"/>
    <property name="jarfile" value="dist/jarjar-${version}.jar"/>
    <property name="jarfile.util" value="dist/jarjar-util-${version}.jar"/>
    <property name="jarfile.mojo" value="dist/jarjar-plugin-${version}.jar"/>

    <property name="test.jar" value="build/rejar.jar"/>

    <target name="init">
        <echo>bootclasspath ${compile.bootclasspath}</echo>
        <tstamp/>
        <path id="path.build">
            <fileset dir="lib" includes="**/*.jar"/>
        </path>
        <path id="path.run">
            <path refid="path.build"/>
            <pathelement path="build/main"/>
            <pathelement path="build/dev"/>
        </path>
        <path id="path.test">
            <path refid="path.run"/>
            <pathelement path="build/test"/>
        </path>
    </target>

    <macrodef name="compile">
        <attribute name="module"/>
        <attribute name="refid"/>
        <attribute name="bootclasspath" default=""/>
        <sequential>
            <mkdir dir="build/@{module}"/>
            <copy todir="build/@{module}">
                <fileset dir="src/@{module}" excludes="**/*.java"/>
            </copy>
            <javac srcdir="src/@{module}" destdir="build/@{module}"
              source="${compile.source}"
              target="${compile.target}" bootclasspath="@{bootclasspath}" extdirs="${compile.extdirs}"
              debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}">
                 <classpath refid="@{refid}"/>
            </javac>
        </sequential>
    </macrodef>

    <target name="compile" depends="init" description="Compile">
        <compile module="main" refid="path.build" bootclasspath="${compile.bootclasspath}"/>
    </target>

    <target name="compile-test" depends="compile" description="Compile tests">
        <compile module="test" refid="path.run"/>
    </target>

    <target name="clean" description="Clean">
        <delete dir="build"/>
        <delete dir="dist"/>
        <delete dir="dist/javadoc"/>
    </target>

    <target name="jar" depends="compile" description="Create Jar">
        <mkdir dir="dist"/>
        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpathref="path.run"/>
        <jarjar jarfile="${jarfile}">
            <fileset dir="build/main"/>
            <zipfileset src="lib/asm.jar"/>
            <zipfileset src="lib/asm-commons.jar" includes="org/objectweb/asm/commons/EmptyVisitor.class"/>
            <zipfileset src="lib/gnu-regexp.jar"/>
            <rule pattern="com.tonicsystems.jarjar.util.**" result="com.tonicsystems.jarjar.ext_util.@1"/>
            <rule pattern="org.objectweb.asm.**" result="com.tonicsystems.jarjar.asm.@1"/>
            <rule pattern="gnu.**" result="com.tonicsystems.jarjar.@0"/>
            <manifest>
                <attribute name="Main-Class" value="com.tonicsystems.jarjar.Main"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
        </jarjar>
    </target>

    <target name="jar-util" depends="compile" description="Create utility Jar">
        <mkdir dir="dist"/>
        <jar jarfile="${jarfile.util}">
            <fileset dir="build/main" includes="com/tonicsystems/jarjar/util/**"/>
        </jar>
    </target>

    <target name="dist-src" depends="compile" description="Create source distribution">
        <mkdir dir="dist"/>
        <zip destfile="dist/jarjar-src-${version}.zip" filesonly="true">
            <zipfileset dir="src" excludes="**/*.save" prefix="jarjar-${version}/src"/>
            <zipfileset dir="lib" prefix="jarjar-${version}/lib"/>
            <zipfileset dir="maven" prefix="jarjar-${version}/maven"/>
            <zipfileset dir="." includes="build.xml,COPYING" prefix="jarjar-${version}"/>
        </zip>
    </target>

    <target name="mojo" depends="jar" description="Create Maven plugin">
        <mkdir dir="dist"/>
        <copy todir="dist/maven">
            <fileset dir="maven"/>
            <filterset>
                <filter token="VERSION" value="${version}"/>
            </filterset>
        </copy>
        <jar jarfile="${jarfile.mojo}">
            <zipfileset src="${jarfile}"/>
            <zipfileset dir="dist/maven" prefix="META-INF/maven" includes="plugin.xml"/>
            <zipfileset
              dir="dist/maven"
              prefix="META-INF/maven/com.tonicsystems.jarjar/jarjar-plugin"
              includes="pom.xml,pom.properties"/>
        </jar>
    </target>

    <target name="test" depends="junit,test-rejar" description="Run tests"/>

    <target name="junit" depends="compile-test">
        <junit>
            <!-- <jvmarg value="-Xint"/> -->
            <!-- <jvmarg value="-Xprof"/> -->
            <!-- <jvmarg value="-server"/> -->
            <formatter type="plain" usefile="false"/>
            <classpath refid="path.test"/>
            <batchtest>
                <fileset dir="src/test" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="test-rejar" depends="jar">
        <taskdef name="jarjar2" classname="com.tonicsystems.jarjar.JarJarTask" classpath="${jarfile}"/>
        <jarjar2 jarfile="${test.jar}">
            <fileset dir="build/main"/>
            <zipfileset src="lib/asm.jar"/>
            <zipfileset src="lib/asm-commons.jar"/>
            <zipfileset src="lib/gnu-regexp.jar"/>
            <rule pattern="org.objectweb.asm.**" result="com.tonicsystems.jarjar.asm.@1"/>
            <rule pattern="gnu.**" result="com.tonicsystems.jarjar.@0"/>
        </jarjar2>
        <delete file="${test.jar}"/>
    </target>

    <!-- TODO: reference ant javadocs -->
    <target name="javadoc" depends="compile" description="Generate the javadoc">
        <mkdir dir="dist/javadoc"/>
        <javadoc 
          sourcepath="src/main"
          destdir="dist/javadoc"
          access="${javadoc.access}"
          failonerror="true"
          packagenames="com.tonicsystems.jarjar.*"
          classpathref="path.run"
          Author="true"
          Version="true"
          Use="true"
        />
    </target>
</project>
